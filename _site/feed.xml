<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Glas</title>
    <description>your description.....
</description>
    <link>http://localhost:8000/</link>
    <atom:link href="http://localhost:8000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 04 Dec 2017 01:49:07 -0300</pubDate>
    <lastBuildDate>Mon, 04 Dec 2017 01:49:07 -0300</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Create Commandline Node.js</title>
        <description>&lt;h2 class=&quot;section-heading&quot;&gt; Create Commandline in node.js for your Sails.js&lt;/h2&gt;

&lt;p&gt;First: Make sure your App is running on Localhost &lt;code&gt;port:80&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Seconds: Clone Tilda : &lt;a href=&quot;https://www.npmjs.com/package/tilda&quot;&gt;Tilda&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thrid: Create a&lt;code&gt;cli.js&lt;/code&gt; file and inpust the following Code below&lt;/p&gt;

&lt;div style=&quot;overflow:auto; height=200; width=100%;&quot;&gt;
&lt;pre style=&quot;color:black;background:white;&quot;&gt;&lt;pre&gt;

// Make sure that no matter where we call the command from,
// we lift the app that lives in the same directory as this script
process.chdir(__dirname);
// Get an instance of Sails
var sails = require('sails');
// Lift the Sails app in the current working directory
       console.log(&quot;Start The GITLIST App&quot;);
        console.log(&quot;To see your app. visit:&quot;);
        console.log(clc.xterm(39).bgBlack.underline('http://127..0.0.1'));
        console.log(&quot;To Clone the Repository and Open Source:&quot;);
        console.log(clc.xterm(39).bgBlack.underline('see: http://www.github.com/spaceg/github.io'));
        console.log(&quot;Bash The Universe by Lucas Gatsas.&quot;);
        console.log(&quot;©.2016 by Gitlist OS&quot;);

        console.log(&quot;press c to stop the app&quot;);


sails.lift({log:{noShip: true}});

/*  sails.lift(rc('sails'));*/

&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here is a Robost Code for the Commandline and lift your with your own commandline: 
here are the links:&lt;/p&gt;

&lt;p&gt;package.json: &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cli.js : &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/cli.js&quot;&gt;cli.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;app.js : &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/app.js&quot;&gt;app.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.gitgnore &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/.gitignore&quot;&gt;.gitignore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.local.js &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/config/local.js&quot;&gt;.local.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;create a &lt;code&gt; .gitgnore &lt;/code&gt; file for your Branch. Set it to the Root of your Directory. 
but the Following code Below in that file. Save it.&lt;/p&gt;
&lt;pre&gt;
*.swp
*.swo
*~
*.log
node_modules




config/local.js
&lt;/pre&gt;

&lt;p&gt;After Include in your &lt;code&gt;package.json&lt;/code&gt; the following code from the Tilda for the &lt;code&gt;bin&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
 &quot;bin&quot;: {
    &quot;gitlist&quot;: &quot;./cli.js&quot;
  },
&lt;/pre&gt;

&lt;p&gt;The full package.json file:&lt;/p&gt;

&lt;pre&gt;

{
  &quot;name&quot;: &quot;gitlist&quot;,
  &quot;version&quot;: &quot;1.0.5&quot;,
  &quot;description&quot;: &quot;Gitlist OS&quot;,
  &quot;keywords&quot;: [],
  &quot;bin&quot;: {
    &quot;gitlist&quot;: &quot;./cli.js&quot;
  },
  &quot;dependencies&quot;: {
    &quot;bcrypt&quot;: &quot;~0.8.0&quot;,
    &quot;commander&quot;: &quot;^2.9.0&quot;,
    &quot;ejs&quot;: &quot;~0.8.4&quot;,
    &quot;grunt&quot;: &quot;0.4.2&quot;,
    &quot;grunt-contrib-clean&quot;: &quot;~0.5.0&quot;,
    &quot;grunt-contrib-coffee&quot;: &quot;~0.10.1&quot;,
    &quot;grunt-contrib-concat&quot;: &quot;~0.3.0&quot;,
    &quot;grunt-contrib-copy&quot;: &quot;~0.5.0&quot;,
    &quot;grunt-contrib-cssmin&quot;: &quot;~0.9.0&quot;,
    &quot;grunt-contrib-jst&quot;: &quot;~0.6.0&quot;,
    &quot;grunt-contrib-less&quot;: &quot;0.11.1&quot;,
    &quot;grunt-contrib-uglify&quot;: &quot;~0.4.0&quot;,
    &quot;grunt-contrib-watch&quot;: &quot;~0.5.3&quot;,
    &quot;grunt-sails-linker&quot;: &quot;~0.9.5&quot;,
    &quot;grunt-sync&quot;: &quot;~0.0.4&quot;,
    &quot;include-all&quot;: &quot;~0.1.3&quot;,
    &quot;nodemailer&quot;: &quot;~1.4.0&quot;,
    &quot;passport&quot;: &quot;~0.2.1&quot;,
    &quot;passport-github&quot;: &quot;^0.1.5&quot;,
    &quot;passport-local&quot;: &quot;~1.0.0&quot;,
    &quot;passport-twitter&quot;: &quot;~1.0.2&quot;,
    &quot;password-generator&quot;: &quot;^0.2.3&quot;,
    &quot;progress&quot;: &quot;^1.1.8&quot;,
    &quot;rc&quot;: &quot;~0.5.0&quot;,
    &quot;sails&quot;: &quot;~0.11.0-rc10&quot;,
    &quot;sails-disk&quot;: &quot;~0.10.0&quot;,
    &quot;sails-hook-autoreload&quot;: &quot;^0.11.4&quot;,
    &quot;sails-mongo&quot;: &quot;^0.12.0&quot;,
    &quot;shortid&quot;: &quot;~2.1.3&quot;,
    &quot;tilda&quot;: &quot;^4.2.1&quot;
  },
  &quot;scripts&quot;: {
    &quot;start&quot;: &quot;node app.js&quot;,
    &quot;debug&quot;: &quot;node debug app.js&quot;
  },
  &quot;main&quot;: &quot;app.js&quot;,
  &quot;repository&quot;: {
    &quot;type&quot;: &quot;git&quot;,
    &quot;url&quot;: &quot;git://github.com/SpaceG/gitlist.io.git&quot;
  },
  &quot;author&quot;: &quot;lucasgatsas&quot;,
  &quot;license&quot;: &quot;BSD-2-Clause&quot;,
  &quot;bugs&quot;: {
    &quot;url&quot;: &quot;https://github.com/SpaceG/gitlist.io/issues&quot;
  },
  &quot;homepage&quot;: &quot;https://github.com/SpaceG/gitlist.io#readme&quot;
}


&lt;/pre&gt;

&lt;div style=&quot;overflow:auto; height=200; width=100%;&quot;&gt;
&lt;pre style=&quot;color:black;background:white;&quot;&gt;&lt;pre&gt;

#!/usr/bin/env node
// Make sure that no matter where we call the command from,
// we lift the app that lives in the same directory as this script
process.chdir(__dirname);

        console.log(&quot;HELLOOOOOOOOO&quot;);
        console.log(&quot;©.2016 by Gitlist OS&quot;);

        console.log(&quot;press c to stop the app&quot;);

// Get an instance of Sails
var sails = require('sails');
// Lift the Sails app in the current working directory
sails.lift({log:{noShip: true}});

&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thats it.&lt;/p&gt;

&lt;p&gt;See the Issue Detail here on Github &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/package.json&quot;&gt; package.json&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;package.json: &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cli.js : &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/cli.js&quot;&gt;cli.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;app.js : &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/app.js&quot;&gt;app.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.gitgnore &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/.gitignore&quot;&gt;.gitignore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.local.js &lt;a href=&quot;https://github.com/SpaceG/gitlist.io/blob/master/config/local.js&quot;&gt;.local.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tools:&lt;/p&gt;

&lt;p&gt;Seconds: Clone Tilda : &lt;a href=&quot;https://www.npmjs.com/package/tilda&quot;&gt;Tilda&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 11 May 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:8000/event/create-commandline-for-your-app-sails.js.html</link>
        <guid isPermaLink="true">http://localhost:8000/event/create-commandline-for-your-app-sails.js.html</guid>
        
        
      </item>
    
      <item>
        <title>Gitlist Nasa Collaboration</title>
        <description>&lt;h2 class=&quot;section-heading&quot;&gt; Gitlist Nasa Collaboration&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;
    &lt;img src=&quot;/img/blur-background-1680x1050-spectrum-electromagnetic-4k-901-1.jpg&quot; style=&quot;width:100%&quot; alt=&quot;Lucas Gatsas&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On 28. April 2016 i will have a meeting with jason from the Nasa. We talking about the OpenSource, Future and Details about the Gitlist App and OpenSource Project.&lt;/p&gt;

&lt;p&gt;Testing App.&lt;/p&gt;

&lt;p&gt;New UI/UX Up. Time: 34 Hours Work on The New Version 1.0.2 - It’s faster, cleaner, more Userfriendly as the Old Version 1.0.1 . 
More Features will next Step. We will write some Api. More to follow soon.&lt;/p&gt;

&lt;p&gt;New small Team Up. I will list all Members. Specially one Person which i like it much to include it to the Team. Never seen such a good a Developer like her!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.github.com/spaceG/gitlist.io&quot;&gt; Gitlist On Github &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt; $ git clone https://github.com/SpaceG/gitlist.io.git &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt; $ sudo sails lift &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt; $ npm install &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt; $ npm install sails-mongo --save  &lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Apr 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:8000/event/gitlist-opensource-meets-nasa-april-2016.html</link>
        <guid isPermaLink="true">http://localhost:8000/event/gitlist-opensource-meets-nasa-april-2016.html</guid>
        
        
      </item>
    
      <item>
        <title>Gem Npm Packages</title>
        <description>&lt;h2 class=&quot;section-heading&quot;&gt; RubyGems&lt;/h2&gt;
&lt;h2 class=&quot;section-heading&quot;&gt;Make your Own Gem&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt; What is Gem? &lt;/strong&gt; 
RubyGems is the official packaging system for &lt;a href=&quot;https://www.ruby-lang.org/de/&quot;&gt;ruby-lang.org&lt;/a&gt;  programming language. It provides a packet format, a tool for managing packages, a repository for their distribution.&lt;/p&gt;

&lt;p&gt;Since Ruby 1.9 RubyGems is part of the standard library of Ruby. If you want to use a RubyGem in a Ruby program, you must first load the required library:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Use &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;RubyGems be accessed via the command line acc.&lt;/p&gt;

&lt;stromg&gt; Example :&amp;lt;/strong&amp;gt; 

&lt;div style=&quot;overflow:auto; height=200; width=100%;&quot;&gt;
&lt;pre style=&quot;color:black;background:white;&quot;&gt;&lt;pre&gt;

require 'json'        # aktuelle Version
gem 'rake', '= 10.1.0' # mit Versionsangabe


&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt; 

&lt;strong&gt;Gem Installation : Rake  &lt;/strong&gt;

Download and install rake with the following.
&lt;code&gt; gem install rake &lt;/code&gt; 



&lt;strong&gt; Example : &lt;/strong&gt; 

First, you must write a “Rakefile” file which contains the build rules. Here's a simple example:

&lt;div style=&quot;overflow:auto; height=200; width=100%;&quot;&gt;
&lt;pre style=&quot;color:black;background:white;&quot;&gt;&lt;pre&gt;

task default: %w[test]

task :test do
  ruby &quot;test/unittest.rb&quot;
end

&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt; 

This Rakefile has two tasks:

A task named “test”, which – upon invocation – will run a unit test file in Ruby.

A task named “default”. This task does nothing by itself, but it has exactly one dependency, namely the “test” task. Invoking the “default” task will cause Rake to invoke the “test” task as well.

Running the “rake” command without any options will cause it to run the “default” task in the Rakefile:

&lt;div style=&quot;overflow:auto; height=200; width=100%;&quot;&gt;
&lt;pre style=&quot;color:black;background:white;&quot;&gt;&lt;pre&gt;

% ls
Rakefile     test/
% rake
(in /home/some_user/Projects/rake)
ruby test/unittest.rb
....unit test output here...

&lt;/pre&gt;&lt;/pre&gt;&lt;/div&gt; 


Type “rake –help” for all available options.
&lt;br /&gt;&lt;br /&gt;

Link: &lt;a href=&quot;https://rubygems.org/&quot;&gt;rubygems.org&lt;/a&gt;  Link:  &lt;a href=&quot;https://www.ruby-lang.org/de/&quot;&gt; ruby-lang.org&lt;/a&gt;

&lt;/stromg&gt;
</description>
        <pubDate>Sun, 18 Oct 2015 00:00:00 -0300</pubDate>
        <link>http://localhost:8000/event/gem-npm-ruby-gems-node.js.html</link>
        <guid isPermaLink="true">http://localhost:8000/event/gem-npm-ruby-gems-node.js.html</guid>
        
        
      </item>
    
      <item>
        <title>DNS - cname Set Up</title>
        <description>&lt;h2 class=&quot;section-heading&quot;&gt;Setting up a custom domain, sub domian and domain name systems.&lt;/h2&gt;
&lt;h2 class=&quot;section-heading&quot;&gt;DNS for GitHub Pages&lt;/h2&gt;

&lt;p&gt;Step 1: Add a new file CNAME to your GitHub Pages repository containing only one line: your top-level domain name.&lt;/p&gt;

&lt;p&gt;E.g.:&lt;/p&gt;

&lt;p&gt;example.com
Step 2: [Optional] but highly recommended&lt;/p&gt;

&lt;p&gt;2.1: Remove all other top-level records (prefixed with @) of type A from your DNS configuration.&lt;/p&gt;

&lt;p&gt;2.2: Remove a CNAME record for the second-level domain www if it is present.&lt;/p&gt;

&lt;p&gt;Step 3: Add these 3 entries to the very top of your DNS configuration:&lt;/p&gt;
&lt;pre&gt;
@        A        192.30.252.153
@        A        192.30.252.154
www      CNAME    your_github_username.github.io.
Replace your_github_username with your actual GitHub username.
&lt;/pre&gt;

&lt;p&gt;Step 4: Wait for your DNS changes to propagate.&lt;/p&gt;

&lt;p&gt;DNS changes aren’t effective immediately. They can take up to a full day to propagate.&lt;/p&gt;

&lt;p&gt;Long answer
This issue has two sides. One is the DNS configuration itself. Another one is the way GitHub Pages forwards HTTP requests.&lt;/p&gt;

&lt;p&gt;We need to know a few things to understand what GitHub is trying to say in their documentation.&lt;/p&gt;

&lt;p&gt;DNS Entry Types
There are two types of DNS records which interest us: CNAME and A.&lt;/p&gt;

&lt;p&gt;A is also known as Apex or sometimes as root entry. It forwards requests to a specified fixed IP address. CNAME entry forwards requests to a specified URL (actual valid plain text URL, not an IP address).&lt;/p&gt;

&lt;p&gt;DNS Load balancing
GitHub has one central URL address which accepts all DNS requests for GitHub Pages: http://username.github.io. That URL is resolved to different IP addresses based on your geographical location. Website hosted on GitHub Pages is a simple collection of HTML, CSS and JS files. GitHub distributes these files to different servers across the globe. So that when your browser sends a request from Europe it receives data from a server in Europe. The same is valid for the requests from Asia and the USA.&lt;/p&gt;

&lt;p&gt;What GitHub is trying to say
Since A records in DNS must contain IP addresses, and they must be either 192.30.252.153 or 192.30.252.154, there is no way to forward requests to a server located somewhere in Europe or Asia. Your website hosted at GitHub Pages will be downloaded from a central GitHub Pages server. There is a minor risk that if both GitHub Pages DNS servers (x.x.x.153 and x.x.x.154) will be down for some reason, all custom domains which use fixed GitHub Pages IP addresses will not be accessible (their DNS requests will not be resolvable).&lt;/p&gt;

&lt;p&gt;That is why GitHub strongly suggests to either use a second-level domain for your GitHub Pages (e.g. blog.example.com) or use a DNS service provider that supports a record type ALIAS that acts as A record but forwards request to a URL address (e.g. username.github.io) instead of a fixed IP address.&lt;/p&gt;

&lt;p&gt;How GitHub Pages treats HTTP requests
After a DNS request for your_github_username.github.io. is resolved into an IP address, e.g. 192.30.252.153 your browser sends an HTTP request to that server with an HTTP header Host. Below are curl examples that load the same website (these examples might not work if you are behind a proxy server):&lt;/p&gt;

&lt;pre&gt;

$&amp;gt; curl --header &quot;Host: your_github_username.github.io&quot; http://192.30.252.153/
$&amp;gt; curl --header &quot;Host: www.example.com&quot; http://192.30.252.153/
$&amp;gt; curl --header &quot;Host: example.com&quot; http://192.30.252.153/

&lt;/pre&gt;

&lt;p&gt;This way GitHub Pages servers know which user website to serve.&lt;/p&gt;

&lt;p&gt;GitHub Pages server will automatically redirect HTTP request to the top-level domain if your CNAME file contains example.com but www.example.com is requested.&lt;/p&gt;

&lt;p&gt;The same is valid if your CNAME file contains www.example.com but the header Host in the HTTP request contains example.com.
Why can’t I add a CNAME record entry that accepts a top-level request (@) to my DNS configuration?
Quote from the GitHub Pages documentation:&lt;/p&gt;

&lt;p&gt;Warning: Do not create a CNAME record for your custom apex domain! Doing so may cause issues with other services, such as email, on that domain.&lt;/p&gt;

&lt;p&gt;Some DNS Checks via. Commandlines&lt;/p&gt;

&lt;pre&gt;
Space-Odysseys-Mac-Pro:~ cyberspace$ dig blog.lucasgatsas.ch

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; blog.lucasgatsas.ch
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 1357
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;blog.lucasgatsas.ch.       IN  A

;; ANSWER SECTION:
blog.lucasgatsas.ch.    9458    IN  A   104.219.248.121

;; Query time: 44 msec
;; SERVER: 10.0.0.1#53(10.0.0.1)
;; WHEN: Sun Feb 28 23:32:09 2016
;; MSG SIZE  rcvd: 53

Space-Odysseys-Mac-Pro:~ cyberspace$ dig spaceg.github.io

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; spaceg.github.io
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 54684
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;spaceg.github.io.      IN  A

;; ANSWER SECTION:
spaceg.github.io.   3600    IN  CNAME   github.map.fastly.net.
github.map.fastly.net.  30  IN  A   185.31.17.133

;; Query time: 42 msec
;; SERVER: 10.0.0.1#53(10.0.0.1)
;; WHEN: Sun Feb 28 23:32:24 2016
;; MSG SIZE  rcvd: 85

&lt;/pre&gt;

&lt;p&gt;Flush DNS
Most operating systems and DNS clients will automatically cache IP addresses and other DNS results, this is done in order to speed up subsequent requests to the same hostname. Sometimes bad results will be cached and therefore need to be cleared from the cache in order for you to communicate with the host correctly. All major operating systems allow you to force this process. Outlined below are the common steps you will need to follow in order to flush your DNS cache.&lt;/p&gt;

&lt;p&gt;Clear your Flushing Cache:&lt;/p&gt;

&lt;p&gt;Apple OS X
Flushing the DNS in Mac OS X is an easy process, but the steps taken will depend on which version of OS X you are running.&lt;/p&gt;

&lt;p&gt;Mac OS X El Capitan
If you are running Mac OS X 10.11, you need to follow the below steps:&lt;/p&gt;

&lt;p&gt;Open up the command terminal.
Run the command sudo killall -HUP mDNSResponder&lt;/p&gt;

&lt;p&gt;Mac OS X Yosemite
If you are running Mac OS X 10.10, you need to follow the below steps:&lt;/p&gt;

&lt;p&gt;Open up the command terminal.
Run the command sudo discoveryutil udnsflushcaches&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$sudo killall -HUP mDNSResponder&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Other Operating Systems - Linux&lt;/p&gt;

&lt;p&gt;Linux
If you are running the nscd Name Service Cache Daemon and wish to flush your DNS cache, then you will need to do the following.&lt;/p&gt;

&lt;p&gt;Open up a command terminal (either as root or run step 2 with sudo).
Run the command &lt;code&gt;/etc/init.d/nscd restart&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Category:Transport_layer_protocols&quot;&gt;Transport Layer Protocols&lt;/a&gt;
Link:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Category:Application_layer_protocols&quot;&gt;Application Layer Protocols&lt;/a&gt;
Link:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Category:Link_protocols&quot;&gt;Link Protocols&lt;/a&gt;
Link:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Category:Internet_layer_protocols&quot;&gt;internet Layer Protocols&lt;/a&gt;
Link:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;Domian Name Systems&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 03 Mar 2015 00:00:00 -0300</pubDate>
        <link>http://localhost:8000/event/dns-cname.html</link>
        <guid isPermaLink="true">http://localhost:8000/event/dns-cname.html</guid>
        
        
      </item>
    
  </channel>
</rss>
